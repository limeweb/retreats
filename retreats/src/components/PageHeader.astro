---
import { titleify } from "@utils/textConverter";

const { title, subtitle } = Astro.props;

// Generate breadcrumb items based on the current URL path
const url = new URL(Astro.request.url);
const pathname = url.pathname;
const parts = pathname.split('/').filter(Boolean);
let accumulatedPath = '';
const items = [];
for (const part of parts) {
  if (part.toLowerCase() === 'page') break;
  accumulatedPath += `/${part}`;
  const label = part
    .replace(/-/g, ' ')
    .replace(/\b\w/g, (c) => c.toUpperCase());

  items.push({ label, href: accumulatedPath });
}
const lastIndex = items.length - 1;

---

<section class="banner bg-white">
  <div class="pt-20 pb-24 page-banner bg-dark rounded-b-2xl relative z-10">
    <div class="container">
      <div class="row items-end" data-aos="fade">
        <div class="sm:col-8 text-center sm:text-left">
          <h1 class="text-4xl md:text-5xl font-secondary font-medium -mt-[6px] text-center sm:text-left mb-8">
            {title}
          </h1>
          
          <nav aria-label="breadcrumb">
            <ul class="flex items-center justify-center sm:justify-start [&>*:last-child]:pointer-events-none">
              <li>
                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round" class="mr-3" style={{ transform: "rotateY(180deg)" }}>
                  <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                  <path d="M9 21v-6a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2" />
                  <path d="M19 12h2l-9 -9l-9 9h2v7a2 2 0 0 0 2 2h5.5" />
                  <path d="M16 19h6" />
                  <path d="M19 16l3 3l-3 3" />
                </svg>
              </li>
              <li><a class="link" href="/">Home</a></li>
              {items.map((item, index) => {
                const isLast = index === lastIndex;
                return (
                  <>
                    <li>
                      <span class="px-4">â€¢</span>
                    </li>
                    <li aria-current={isLast ? 'page' : undefined}>
                      {isLast ? (
                        <span class="link pointer-events-none text-white/75">{titleify(item.label)}</span>
                      ) : (
                        <a class="link" href={item.href}>{titleify(item.label)}</a>
                      )}
                    </li>
                  </>
                );
              })}
            </ul>
          </nav>
        </div>
        <div class="sm:col-4 block mt-6 sm:mt-0 text-center sm:text-right">
          <span class="font-secondary text-2xl leading-none text-white/75">
            {subtitle}
          </span>
        </div>
      </div>
    </div>
  </div>
</section>